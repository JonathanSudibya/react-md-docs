[{"description":"","methods":[{"name":"caseInsensitiveFilter","docblock":null,"modifiers":["static"],"params":[{"name":"hayStack","type":null},{"name":"filterText","type":null},{"name":"dataLabel","type":null}],"returns":null},{"name":"fuzzyFilter","docblock":null,"modifiers":["static"],"params":[{"name":"hayStack","type":null},{"name":"needle","type":null},{"name":"dataLabel","type":null}],"returns":null}],"props":{"style":{"type":{"name":"object"},"required":false,"description":"An optional style to apply to the text field's container."},"className":{"type":{"name":"string"},"required":false,"description":"An optional className to apply to the text field's container."},"inputClassName":{"type":{"name":"string"},"required":false,"description":"An optional className to apply to the input field iteself."},"inputStyle":{"type":{"name":"object"},"required":false,"description":"An optional style to apply to the text field input itself."},"listClassName":{"type":{"name":"string"},"required":false,"description":"The optional className to apply to the opened menu List if the\n`Autocomplete` is not using `inline` suggestions."},"listStyle":{"type":{"name":"object"},"required":false,"description":"The optional style to apply to the opened menu List if the\n`Autocomplete` is not using `inline` suggestions."},"menuStyle":{"type":{"name":"object"},"required":false,"description":"An optional style to apply to the surrounding `Menu` component if the\n`Autocomplete` is not using `inline` suggestions."},"menuClassName":{"type":{"name":"string"},"required":false,"description":"An optional className to apply to the surrounding `Menu` component if the\n`Autocomplete` is not using `inline` suggestions."},"floatingLabel":{"type":{"name":"bool"},"required":true,"description":"Boolean if the label for the text field should be floating.","defaultValue":{"value":"true","computed":false}},"disabled":{"type":{"name":"bool"},"required":false,"description":"Boolean if the autocomplete is disabled."},"label":{"type":{"name":"string"},"required":false,"description":"A label to display with the autocomplete."},"defaultValue":{"type":{"name":"string"},"required":true,"description":"The default value for the autocomplete's text field.","defaultValue":{"value":"''","computed":false}},"dataLabel":{"type":{"name":"string"},"required":true,"description":"An object key to use to extract the text to be compared for filtering.\nThis will only be applied if the the given `data` prop is an array of objects.","defaultValue":{"value":"'primaryText'","computed":false}},"dataValue":{"type":{"name":"string"},"required":false,"description":"An optional object key to use to extract the `value` of the given `data` prop.\nThis is really only used with generating a unique react key. The unique react\nkey with either be:\n- the datum if it is a string or number\n- the `key` attribute of the datum object\n- the `datum[dataValue]`\n- or the `datum[dataLabel]`"},"data":{"type":{"name":"custom","raw":"(props, propName, component) => {\n  const { dataLabel } = props;\n  return PropTypes.arrayOf(PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.shape({\n      [dataLabel]: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n      ]).isRequired,\n    }),\n  ])).isRequired(props, propName, component);\n}"},"required":false,"description":"The data that will be used for autocomplete suggestions. This can either be\nan array of string, number, or object. If it is an array of objects, the key\n`dataLabel` is required.\n\n```js\nPropTypes.shape({\n  [dataLabel]: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ]).isRequired,\n}),"},"filter":{"type":{"name":"func"},"required":false,"description":"An optional function to use to filter the `data`. If you have a sexy backend\nusing solr or some other seach/indexer, it is recommended to set this prop to\n`null` or `false`-ish.","defaultValue":{"value":"Autocomplete.fuzzyFilter","computed":true}},"onChange":{"type":{"name":"func"},"required":false,"description":"An optional function to call when the `Autocomplete`'s text field value changes.\nThe callback will be given the new value and the change event.\n\n`onChange(textFeldValue, event)`"},"block":{"type":{"name":"bool"},"required":false,"description":"Boolean if this text field should be styled as a full width text field.\nFloating labels and the text field indicator will be removed automatically."},"fullWidth":{"type":{"name":"bool"},"required":false,"description":"Boolean if the autocomplete should span the entire width."},"inline":{"type":{"name":"bool"},"required":false,"description":"Boolean if the `Autocomplete` should display suggestions inline instead\nof in a `Menu`."}},"source":"src/js/Autocompletes/Autocomplete.js","component":"Autocomplete"}]