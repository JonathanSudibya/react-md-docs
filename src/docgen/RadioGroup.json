  {
    "component": "RadioGroup",
    "source": "src/js/SelectionControls/RadioGroup.js",
    "description": "The `RadioGroup` component is a state manager for the `Radio` component.\nIt will automatically inject the name, an onChange function, and\ndetermine whether a radio is checked.\n\nThis is just a simple wrapper to reduce some prop redundancy.",
    "props": {
      "defaultValue": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The default value for the radio group. This will check the radio that\nhas the same value first by default.\n\nIf this is omitted, the first radio will be selected."
      },
      "disabled": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Boolean if the entire radio group is disabled."
      },
      "className": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "An optional className to apply to the radio group."
      },
      "children": {
        "type": {
          "name": "arrayOf",
          "value": {
            "name": "node"
          }
        },
        "required": true,
        "description": "The radio buttons to manage."
      },
      "component": {
        "type": {
          "name": "string"
        },
        "required": true,
        "description": "The component to render the radio group as.",
        "defaultValue": {
          "value": "'div'",
          "computed": false
        }
      },
      "inline": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Boolean if the radio buttons should be force to be inline.",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "onChange": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "An optional onChange function to call when any of the radio buttons are clicked.\nThis will return the clicked radio's value and the change event.\n\n`onChange(value, event)`."
      },
      "name": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The name to give to all the radio buttons."
      },
      "value": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The current value for the radio group. This will convert the radio group\ninto a controlled component which will require the onChange prop\nto be given."
      }
    }
  }
